{"version":3,"sources":["imgs/icon-ok-hand.svg","imgs/icon-thumbs-up.svg","imgs/icon-thumbs-down.svg","imgs/map-icon-thumbs-up.svg","imgs/map-icon-thumbs-down.svg","imgs/map-icon-ok-hand.svg","imgs/map-icon-no-data.svg","imgs/logo-surf-spokane.svg","imgs/icon-help.svg","imgs/icon-contact.svg","imgs/surf_app_snippet.jpg","imgs/map_snippet.jpg","components/header/Header.js","components/footer/Footer.js","resource/Util.js","components/map/MapContainer.js","components/data_cards/DataCardDisplay.js","components/data_cards/DataCardDesc.js","components/data_cards/DataCardHistory.js","components/data_cards/DataCardDetail.js","resource/Config.js","components/data_cards/DataCard.js","components/data_cards/DataCardDeck.js","App.js","components/contact/Contact.js","components/help/Help.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","handleClick","bind","event","this","toggleMapVisibility","mapButtomVisible","src","require","alt","id","className","type","checked","mapVisible","onClick","readOnly","htmlFor","getMapVisibleClass","version","xmlns","x","y","viewBox","enableBackground","points","Component","Footer","showHelp","showContact","window","scrollTo","top","left","behavior","close","to","getSpotStatus","spot","value","currentValue","min","max","optMin","optimumFlowLow_i","optMax","optimumFlowHigh_i","undefined","formatNumber","number","toString","replace","compareSpots","spotA","spotB","valA","minA","maxA","valB","minB","maxB","deltaA","Math","abs","deltaB","MapContainer","handleMarkerClick","marker","filterSpots","setState","selectedSpot","activeMarker","showingInfoWindow","center","lat","position","lng","onInfoWindowClose","unfilterSpots","state","getCenter","spots","zoom","getZoom","mapError","googleBaseUrl","containerRef","React","createRef","status","OkHand","ThumbsUp","ThumbsDown","NoData","length","location","lon","map","pixelWidth","minLng","angle","floor","log","LN2","console","Infinity","parseInt","current","offsetWidth","ref","google","initialCenter","onMouseout","handleMapMouseOut","key","spot_id","name","unit","parkingLat","accessLoc","parkingLng","icon","getIcon","visible","onClose","href","target","rel","error","GoogleApiWrapper","apiKey","process","language","DataCardDisplay","values","currentValueTime","Date","readingTime","valueArray","filter","parse","dateTime","setHours","getHours","reduce","prevValue","toFixed","getFlowChange","flowChange","getStatusIcon","getFlowChangeClass","defaultProps","DataCardDetail","usgs_site","site","spotDetail","difficulty","siteName","desc","flowInfo","flow","links","link","label","url","features","join","tricks","DataCardHistory","months","month","day","today","todayMonth","getUTCMonth","todayDay","getUTCDate","indexOf","percent","getPercent","breakpointClass","monthNumber","history","object","find","record","days","i","push","setMonth","getDays","isToday","getColorValue","activeTab","handleHeaderButtonClick","button","optLow","optHigh","optUnit","DataCardDesc","properties","DataCard","details","onChangeExpand","fetch","headers","then","response","json","fetchData","onChange","defaultChecked","expanded","DataCardDeck","App","surfSpots","filteredSpots","expandedCards","filtered","isLoaded","toggleCardExpand","sort","getSurfSpots","spotName","match","params","gageNumber","gage","toLowerCase","interval","setInterval","clearInterval","Contact","sent","sentError","validEmail","handleSubmit","handleReset","preventDefault","validate","emailjs","sendForm","result","form","validateEmail","senderEmail","email","emailCheck","test","String","emailError","onSubmit","placeholder","required","rows","Help","handleClose","Boolean","hostname","ReactDOM","render","basename","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a969de90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-ok-hand.cdabfdfd.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-thumbs-up.0c8a7df4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-thumbs-down.f5f54d59.svg\";","module.exports = __webpack_public_path__ + \"static/media/map-icon-thumbs-up.e033c19d.svg\";","module.exports = __webpack_public_path__ + \"static/media/map-icon-thumbs-down.1694df64.svg\";","module.exports = __webpack_public_path__ + \"static/media/map-icon-ok-hand.66def7bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/map-icon-no-data.9bb93053.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-surf-spokane.00f3e031.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-help.36e3b190.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-contact.eef7c833.svg\";","module.exports = __webpack_public_path__ + \"static/media/surf_app_snippet.feb428ef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/map_snippet.774313c6.jpg\";","/*\r\n    File: Header.js\r\n    Author: Chris Mowry\r\n    Date: 05/16/2020\r\n    Email: cmowry84@gmail.com\r\n    Description:\r\n\r\n        This component is intended to be the header bar at the top of the\r\n        web application. It also serves as the control for toggling the map\r\n        view visibility.\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport '../../style/header.scss'\r\n\r\n class Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(event){\r\n        this.props.toggleMapVisibility();\r\n    }\r\n\r\n    getMapVisibleClass(){\r\n        return this.props.mapButtomVisible\r\n                ? 'map-button-display'\r\n                : 'map-button-display hidden'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <img src={require(\"../../imgs/logo-surf-spokane.svg\")} alt=\"Spokane Surf Logo\" />\r\n                <h1>Spokane Surf Report</h1>\r\n                <input id=\"map-button\" className=\"map-button\" type=\"checkbox\" \r\n                checked={this.props.mapVisible} onClick={this.handleClick} readOnly />\r\n\t\t\t\t<label htmlFor=\"map-button\" className={this.getMapVisibleClass()}>\r\n\t\t\t\t\t<h2>Map</h2>\r\n                    <svg version=\"1.1\" \r\n                        id=\"arrow\" \r\n                        xmlns=\"http://www.w3.org/2000/svg\" \r\n                        x=\"0px\" y=\"0px\"\r\n                        viewBox=\"0 0 50 50\" \r\n                        enableBackground=\"new 0 0 50 50\" >\r\n                        <polygon points=\"25,6.555 50.009,6.555 37.505,25 25,43.445 12.496,25 -0.008,6.555 \"/>\r\n                    </svg>\r\n\t\t\t\t</label>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header","/*\r\n    File: Footer.js\r\n    Author: Chris Mowry\r\n    Date: 08/05/2020\r\n    Email: cmowry84@gmail.com\r\n    Description:\r\n\r\n        This component is intended to be the footer bar at the bottom of the\r\n        web application. It provides additional information about the application.\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../../style/footer.scss';\r\n\r\n class Footer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.showHelp = this.showHelp.bind(this);\r\n        this.showContact = this.showContact.bind(this);\r\n    }\r\n\r\n    showHelp(event){\r\n        this.props.showHelp();\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n        });\r\n    }\r\n\r\n    showContact(event){\r\n        this.props.showContact();\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n        });\r\n    }\r\n\r\n    close(event){\r\n        this.props.close();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <div className=\"copyright\">\r\n                    <p>&copy; 2020 Spokane Surf Report - All rights reserved.</p>\r\n                </div>\r\n                <div className=\"options-bar\">\r\n                    <Link className='option' to='/help'>\r\n                        <img src={require(\"../../imgs/icon-help.svg\")} alt='help'/>\r\n                        <h2>Help</h2>\r\n                    </Link>\r\n                    <Link className='option' to='/contact'>\r\n                        <img src={require(\"../../imgs/icon-contact.svg\")} alt='contact'/>\r\n                        <h2>Contact</h2>\r\n                    </Link>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer","// determines if the spot current value is in the spot's range\r\nexport const getSpotStatus = (spot) => {\r\n\r\n    // destructures spot object\r\n    const { currentValue:value, min, max, optimumFlowLow_i:optMin, optimumFlowHigh_i:optMax } = spot;\r\n\r\n    if (value === undefined || min === undefined || max === undefined) {\r\n        return \"NoData\";\r\n    } else {\r\n\r\n        // compares the current value to the min, max and optimum ranges\r\n        let status = value > min && value < max\r\n                    ? value > optMin && value < optMax \r\n                        ? 'spot-optimum' \r\n                        : 'spot-in'\r\n                    : 'spot-out';\r\n\r\n        return status;\r\n    }\r\n}\r\n\r\n// adds commas as a thousands seperator\r\nexport const formatNumber = (number) => {\r\n    return number.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n}\r\n\r\n// compares the spots for sorting\r\nexport const compareSpots = (spotA, spotB) => {\r\n\r\n    // deconstructs the two spot objects\r\n    const { currentValue: valA, min:minA, max:maxA } = spotA;\r\n    const { currentValue: valB, min:minB, max:maxB } = spotB;\r\n\r\n    // determines how far the spot A is from being in\r\n    const deltaA = ( Math.abs( minA - minA ) < Math.abs( maxA - valA ))\r\n                    ? Math.abs( minA - valA ) / minA\r\n                    : Math.abs( valA - maxA ) / maxA;\r\n\r\n    // determines how far the spot B is from being in\r\n    const deltaB = ( Math.abs( minB - valB ) < Math.abs( maxB - valB ))\r\n                    ? Math.abs( minB - valB ) / minB\r\n                    : Math.abs( valB - maxB ) / maxB;\r\n\r\n\r\n    if( getSpotStatus(spotA) === 'spot-optimum' \r\n        && (getSpotStatus(spotB) === 'spot-in' || getSpotStatus(spotB) === 'spot-out')){\r\n        return -1;\r\n    }\r\n\r\n    if( getSpotStatus(spotB) === 'spot-optimum' \r\n        && (getSpotStatus(spotA) === 'spot-in' || getSpotStatus(spotA) === 'spot-out')){\r\n        return 1;\r\n    }\r\n     \r\n    if( getSpotStatus(spotA) === 'spot-in' \r\n        && getSpotStatus(spotB) === 'spot-out'){\r\n        return -1;\r\n    }\r\n\r\n    if( getSpotStatus(spotB) ===  'spot-in' \r\n        && getSpotStatus(spotA) === 'spot-out'){\r\n        return 1;\r\n    }\r\n\r\n    if (getSpotStatus(spotA) === 'spot-out' && getSpotStatus(spotB) === 'spot-out' ){\r\n        if( deltaA < deltaB){ return -1; }\r\n        if( deltaA > deltaB ){ return 1; }\r\n    }\r\n\r\n    return 0;\r\n}","import React, { Component } from 'react';\r\nimport { Map, Marker, InfoWindow, GoogleApiWrapper } from 'google-maps-react';\r\nimport { getSpotStatus } from '../../resource/Util';\r\nimport '../../style/map.scss'\r\nimport ThumbsUp from '../../imgs/map-icon-thumbs-up.svg'\r\nimport ThumbsDown from '../../imgs/map-icon-thumbs-down.svg'\r\nimport OkHand from '../../imgs/map-icon-ok-hand.svg'\r\nimport NoData from '../../imgs/map-icon-no-data.svg'\r\n\r\n class MapContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let pixelWidth = 0\r\n\r\n        this.state = {\r\n            center: this.getCenter(this.props.spots), // centers the map\r\n            zoom: this.getZoom(this.props.spots, pixelWidth), // calculates zoom level\r\n            showingInfoWindow: false,  //Hides or the shows the infoWindow\r\n            activeMarker: {},          //Shows the active marker upon click\r\n            selectedSpot: {},          //Shows the infoWindow to the selected place upon a marker\r\n            mapError : false\r\n        }\r\n        \r\n        this.googleBaseUrl = 'http://maps.google.com/maps?q=loc:';\r\n\r\n        this.containerRef = React.createRef()\r\n\r\n    }\r\n\r\n    getIcon(spot){\r\n\r\n        // determines which map icon to use\r\n        const status = getSpotStatus(spot);\r\n\r\n        if( status === 'spot-optimum' ){\r\n            return OkHand;\r\n        } else if ( status === 'spot-in') {\r\n            return ThumbsUp;\r\n        } else if ( status === 'spot-out'){\r\n            return ThumbsDown;\r\n        } else {\r\n            return NoData;\r\n        }\r\n    }\r\n\r\n    getCenter(spots){\r\n\r\n        if (spots.length === 1){\r\n            return { lat: spots[0].location.lat, lng: spots[0].location.lon }\r\n        }\r\n        else if (spots.length > 1){\r\n            // calculates min and max longitute\r\n            let minLat = Math.min(...spots.map((spot) => spot.location.lat));\r\n            let maxLat = Math.max(...spots.map((spot) => spot.location.lat));\r\n            let minLng = Math.min(...spots.map((spot) => spot.location.lon));\r\n            let maxLng = Math.max(...spots.map((spot) => spot.location.lon));\r\n\r\n            let lat = (minLat + maxLat) / 2.0;\r\n            let lng = (minLng + maxLng) / 2.0;;\r\n\r\n            return { lat: lat, lng: lng}\r\n        }\r\n        else{\r\n            return { lat: 47.7061299, lng: -117.1419032 }\r\n        }\r\n    }\r\n\r\n    getZoom(spots, pixelWidth){\r\n        let zoom = 11;\r\n        if(pixelWidth > 0){\r\n            // default google value\r\n            let GLOBE_WIDTH = 256;\r\n\r\n            // calculates min and max longitute\r\n            let minLng = Math.min(...spots.map((spot) => spot.location.lon));\r\n            let maxLng = Math.max(...spots.map((spot) => spot.location.lon));\r\n\r\n            // gets the angle\r\n            let angle = maxLng - minLng;\r\n            if( angle < 0 ){\r\n                angle += 360;\r\n            }\r\n\r\n            // calculates zoom level\r\n            zoom = Math.floor(Math.log(pixelWidth * 360 / angle / GLOBE_WIDTH) / Math.LN2);\r\n\r\n            console.log(`Zoom: ${zoom}`);\r\n\r\n            if (zoom === Infinity || zoom === -Infinity){\r\n                zoom = 15;\r\n            }\r\n\r\n            if (zoom > 15) {\r\n                zoom = 15\r\n            }\r\n        }\r\n\r\n        return zoom;\r\n    }\r\n\r\n    handleMarkerClick = (props, marker) => {\r\n        this.props.filterSpots(props.id);\r\n        this.setState({\r\n            selectedSpot : props,\r\n            activeMarker : marker,\r\n            showingInfoWindow : true,\r\n            center: {lat : props.position.lat, lng : props.position.lng}\r\n        });\r\n    }\r\n\r\n    onInfoWindowClose = () =>\r\n        this.setState({\r\n          activeMarker: null,\r\n          showingInfoWindow: false\r\n        },() => { this.props.unfilterSpots() });\r\n\r\n\r\n    componentDidMount(){\r\n        let pixelWidth = parseInt(this.containerRef.current.offsetWidth);\r\n        this.setState({zoom: this.getZoom(this.props.spots, pixelWidth)});\r\n    }\r\n\r\n    // componentDidCatch(){\r\n    //     return (\r\n    //         <div className = 'map-container'></div>\r\n    //     )\r\n    // }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        // Update state so the next render will show the fallback UI.\r\n        this.setState({ mapError: true });\r\n      }\r\n\r\n    render() {\r\n        if (this.state.mapError){\r\n            return ( <div className = 'map-container'> Map Not Available!</div> );\r\n        } else {\r\n\r\n            return (\r\n                <div className={ this.props.mapVisible ? 'map-container' : 'map-container hidden' } \r\n                    ref={this.containerRef}>\r\n                    <Map\r\n                        className='map'\r\n                        google={this.props.google}\r\n                        zoom={this.state.zoom}\r\n                        initialCenter={{lat: this.state.center.lat, lng: this.state.center.lng}}\r\n                        center={{lat: this.state.center.lat, lng: this.state.center.lng}}\r\n                        onMouseout={this.handleMapMouseOut}>            \r\n                        {\r\n                            this.props.spots.map(\r\n                                spot => (\r\n                                    <Marker \r\n                                        key={spot.spot_id}\r\n                                        name={spot.name}\r\n                                        id={spot.spot_id}\r\n                                        value={spot.currentValue}\r\n                                        unit={spot.unit}\r\n                                        parkingLat={spot.accessLoc.lat }\r\n                                        parkingLng={ spot.accessLoc.lon }\r\n                                        position={{lat: spot.location.lat, lng: spot.location.lon}}\r\n                                        icon={this.getIcon(spot)}\r\n                                        onClick={this.handleMarkerClick} />\r\n                                )\r\n                            )\r\n                        }\r\n                        {\r\n                            this.props.spots.map(\r\n                                spot => (\r\n                                    <InfoWindow \r\n                                        key={spot.spot_id} \r\n                                        marker={this.state.activeMarker}\r\n                                        visible={this.state.showingInfoWindow}\r\n                                        onClose={this.onInfoWindowClose} >\r\n                                        <div className='info-window'\r\n                                        > \r\n                                            <h2>\r\n                                                {\r\n                                                    `${this.state.selectedSpot.name} : ` +\r\n                                                    `${this.state.selectedSpot.value} ` +\r\n                                                    `${this.state.selectedSpot.unit}`\r\n                                                }\r\n                                            </h2>\r\n                                            <a\r\n                                                href={ `${this.googleBaseUrl}${this.state.selectedSpot.parkingLat},${this.state.selectedSpot.parkingLng}` } \r\n                                                target=\"_blank\" \r\n                                                rel='noopener noreferrer'>\r\n                                                Get Directions\r\n                                            </a>\r\n                                        </div>\r\n\r\n                                    </InfoWindow>\r\n                                ))\r\n                        }\r\n                    </Map>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper((props) => ({\r\n    apiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    language: props.language\r\n}))( MapContainer );\r\n    \r\n  \r\n\r\n    \r\n  ","/*\r\n    File: DataCardDisplay.js\r\n    Author: Chris Mowry\r\n    Date: 05/16/2020\r\n    Email: cmowry84@gmail.com\r\n    Description:\r\n\r\n        This component displays the basic information about the surf spot.\r\n        It is intended display the name, current status, and other basic information \r\n        about the spot.\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\n// import DataCardGraph from './DataCardGraph';\r\nimport { getSpotStatus, formatNumber } from '../../resource/Util';\r\n\r\nimport '../../style/datacard.scss'\r\n\r\n class DataCardDisplay extends Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    getFlowChange(){\r\n\r\n        const { values = [], currentValue = 0 , currentValueTime = new Date() } = this.props.spot;\r\n\r\n        // converts the current value's time to a date object\r\n        const readingTime = new Date(currentValueTime);\r\n\r\n        if ( values !== undefined && values.length > 0 ){\r\n\r\n            // filters the value array to all value object with a timestamp at least 1 hour previous\r\n            // to the current value timestamp\r\n            let valueArray = values.filter(\r\n                (value) => Date.parse(value.dateTime) <= readingTime.setHours(readingTime.getHours() - 1)\r\n            )\r\n            \r\n            // reduces the array to the max timestamp of values 1 hour less than the current value timestamp\r\n            let hourPreviousValue = valueArray.reduce((prevValue, currentValue) => \r\n                ( new Date(prevValue.dateTime) > new Date(currentValue.dateTime)\r\n                    ? prevValue\r\n                    : currentValue\r\n                ), new Date(valueArray[0].dateTime)\r\n            )\r\n\r\n            // returns the difference of the current time and 1 hour previous\r\n            return (currentValue - hourPreviousValue.value).toFixed(2);\r\n\r\n        } else {\r\n            return 0;\r\n        }     \r\n    }\r\n\r\n    getFlowChangeClass(){\r\n        if ( this.getFlowChange() > 0) {\r\n            return 'flow-positive';\r\n        } else if ( this.getFlowChange() < 0 ) {\r\n            return 'flow-negative';\r\n        } else {\r\n            return 'flow-flat'\r\n        }\r\n    }\r\n\r\n    getStatusIcon(){\r\n\r\n        const status = getSpotStatus(this.props.spot);\r\n\r\n        switch(status) {\r\n            case 'spot-optimum' :\r\n              return <img src={require(\"../../imgs/icon-ok-hand.svg\")} alt=\"Optimum Icon\" />\r\n            case 'spot-in':\r\n              return <img src={require(\"../../imgs/icon-thumbs-up.svg\")} alt=\"Surfable Icon\" />\r\n            case 'spot-out':\r\n                return <img src={require(\"../../imgs/icon-thumbs-down.svg\")} alt=\"Not Surfable Icon\" />\r\n            default:\r\n              return \"\";\r\n          }\r\n    }\r\n\r\n    render() {\r\n\r\n        // destructures the surf spot object\r\n        const {name = 'Unknown', currentValue = 0, min = 0, max = 0, unit = 'unk'} = this.props.spot;\r\n        const flowChange = this.getFlowChange();\r\n        return (\r\n            <div className='data-card-display'>\r\n                <div className='status-icon'>\r\n                    { this.getStatusIcon() }\r\n                </div>\r\n                {/* <DataCardGraph spot={this.props.spot}/> */}\r\n                <h2>{ name }</h2>\r\n                <div className='spot-values'>\r\n                    <div>\r\n                        <h3>{ `${ formatNumber(currentValue) } ${unit}` }</h3>\r\n                        <h5 className={ this.getFlowChangeClass() }>\r\n                            { `${ flowChange > 0 ? \"+\" : \"\" }${ formatNumber(flowChange) }` }\r\n                        </h5>\r\n                    </div>\r\n                    <h4>{ `range: ${ formatNumber(min) } - ${ formatNumber(max) } ${ unit }` }</h4>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n }\r\n\r\n DataCardDisplay.defaultProps = {\r\n     spot:{}\r\n}\r\n\r\nexport default DataCardDisplay;","/*\r\n    File: DataCardDesc.js\r\n    Author: Chris Mowry\r\n    Date: 05/16/2020\r\n    Email: cmowry84@gmail.com\r\n    Description:\r\n\r\n        This component provides in-depth information about the surf spot. It give a \r\n        detailed description, links to additional resourses and other detailed information.\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport '../../style/datacard-desc.scss'\r\n\r\n class DataCardDetail extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.usgs_site = `https://waterdata.usgs.gov/nwis/uv?${this.props.spot.site}`;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='data-card-desc'>\r\n                <div className='overview-box'>\r\n                    <div className='gage-box'>\r\n                        <h4>Gage:</h4>\r\n                        <h4 className='value'>{this.props.spot.site }</h4>\r\n                    </div>\r\n                    {\r\n                        this.props.spotDetail.difficulty !== undefined\r\n                        ? <div className='diff-box'>\r\n                            <h4>Difficulty:</h4>\r\n                            <h4 className='value'>{ ` ${this.props.spotDetail.difficulty }` }</h4>\r\n                          </div>\r\n                        : \"\"\r\n                    }\r\n                </div>\r\n                {\r\n                    // Gage Site \r\n                    this.props.spot.siteName !== undefined\r\n                    ? <div>\r\n                        <h4>Gage Name:</h4>\r\n                        <a href={ this.usgs_site } target=\"_blank\" rel='noopener noreferrer'>\r\n                            { this.props.spot.siteName }\r\n                        </a>\r\n                     </div>\r\n                    : \"\"\r\n                }\r\n                {\r\n                    // Description \r\n                    this.props.spotDetail.desc !== undefined\r\n                    ? <div className='describe-box'>\r\n                            <h4>Description:</h4>\r\n                                <p>{ this.props.spotDetail.desc }</p>\r\n                            </div>\r\n                    : \"\"\r\n                }\r\n                {\r\n                    // Flow info \r\n                    this.props.spotDetail.flowInfo !== undefined \r\n                    ? <div className='info-box'>\r\n                        <h4>Flow Info:</h4>\r\n                        <ul>\r\n                            {\r\n                                this.props.spotDetail.flowInfo.map(\r\n                                (flow) => <li key={ flow }>{ flow }</li>\r\n                                )\r\n                            }\r\n                        </ul>\r\n                      </div>\r\n                    : \"\"\r\n                }\r\n                {\r\n                    // Links\r\n                    this.props.spotDetail.links !== undefined \r\n                    ? <div className='info-box'>\r\n                        <h4>Links:</h4>\r\n                        <ul>\r\n                            {\r\n                                this.props.spotDetail.links.map(\r\n                                (link) => \r\n                                    <li key={ link.label }>\r\n                                        <a href={link.url} target='_blank' rel='noopener noreferrer'>\r\n                                            { link.label }\r\n                                        </a>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    :\"\"\r\n                }\r\n                {\r\n                    // Features\r\n                    this.props.spotDetail.features !== undefined \r\n                    ? <div className='info-box'>\r\n                        <h4>Features:</h4>\r\n                        <p> { this.props.spotDetail.features.join(', ') }</p>\r\n                    </div>\r\n                    : \"\"\r\n                }\r\n                {\r\n                    // Tricks\r\n                    this.props.spotDetail.tricks !== undefined \r\n                    ? <div className='info-box'>\r\n                        <h4>Tricks:</h4>\r\n                        <p> { this.props.spotDetail.tricks.join(', ') }</p>\r\n                    </div>\r\n                    : \"\"\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n }\r\n\r\nexport default DataCardDetail;","/*\r\n    File: DataCardHistory.js\r\n    Author: Chris Mowry\r\n    Date: 05/16/2020\r\n    Email: cmowry84@gmail.com\r\n    Description:\r\n\r\n        This component displays a color coded calendar depicting the average percent \r\n        over a given time the a surf spot is at a surfable level.\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport '../../style/datacard-history.scss'\r\n\r\n class DataCardHistory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.months = [\r\n            \"January\",\r\n            \"Febuary\",\r\n            \"March\",\r\n            \"April\",\r\n            \"May\",\r\n            \"June\",\r\n            \"July\",\r\n            \"August\",\r\n            \"September\",\r\n            \"October\",\r\n            \"November\",\r\n            \"December\",\r\n        ]\r\n    }\r\n\r\n    isToday(month, day){\r\n\r\n        let className = \"not-today\"\r\n        const today = new Date();\r\n        const todayMonth = today.getUTCMonth() + 1;\r\n        const todayDay = today.getUTCDate();\r\n\r\n        const monthNumber = this.months.indexOf(month) + 1;\r\n\r\n        if(monthNumber === todayMonth && day === todayDay){\r\n            className = \"today\"\r\n        }\r\n\r\n        return className;\r\n    }\r\n\r\n    getColorValue(month, day){\r\n        const percent = this.getPercent(month, day);\r\n\r\n        let breakpointClass = \"\";\r\n\r\n        if (percent > 0.0 && percent <= 0.10){\r\n            breakpointClass = \"break-point-1\";\r\n        } else if (percent > 0.10 && percent - 0.25 < 0.001) {\r\n            breakpointClass = \"break-point-2\";\r\n        } else if (percent > 0.25 && percent - 0.5 < 0.001) {\r\n            breakpointClass = \"break-point-3\";\r\n        } else if (percent > 0.50 && percent - 0.75 < 0.001) {\r\n            breakpointClass = \"break-point-4\";\r\n        } else if (percent > 0.75) {\r\n            breakpointClass = \"break-point-5\";\r\n        }\r\n\r\n        return breakpointClass;\r\n    }\r\n\r\n    getPercent(month, day){\r\n\r\n        const monthNumber = this.months.indexOf(month) + 1;\r\n        const { history = [] } = this.props.spotDetail;\r\n        const object = history.find((record) => record.month === monthNumber && record.day === day, {});\r\n\r\n        return object === undefined ? 0 : object.percent;\r\n    }\r\n\r\n    getDays(){\r\n        let days = [];\r\n\r\n        for (let i = 0; i < 31; i ++){\r\n            days.push(i + 1);\r\n        }\r\n\r\n        return days;\r\n    }\r\n\r\n    render() {\r\n\r\n        let date = new Date();\r\n        date.setMonth(1)\r\n        return (\r\n            <div className='data-card-history'>\r\n                <h4>Daily Surf Probability</h4>\r\n                <table className='legend'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>&lt; 10%</th>\r\n                            <th>10% - 25%</th>\r\n                            <th>25% - 50%</th>\r\n                            <th>50% - 75%</th>\r\n                            <th>75% - 100%</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><div className='break-point-1'></div></td>\r\n                            <td><div className='break-point-2'></div></td>\r\n                            <td><div className='break-point-3'></div></td>\r\n                            <td><div className='break-point-4'></div></td>\r\n                            <td><div className='break-point-5'></div></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table> \r\n                <div className='history-chart-container'>\r\n                    <table className='history-chart'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th> </th>\r\n                                {\r\n                                    // maps the days of the month to the header row\r\n                                    this.getDays().map(\r\n                                        (day) => <th key={day} className={`day-${day}`}>{ day }</th>\r\n                                    )\r\n                                }\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                // maps the months and day cells\r\n                                this.months.map(\r\n                                    (month) => \r\n                                        <tr key={month}>\r\n                                            <th className='label-col'>{ month }</th>\r\n                                            {\r\n                                                \r\n                                                this.getDays().map(\r\n                                                    (day) => \r\n                                                        <td key={day} className={this.isToday(month, day)}>\r\n                                                            <div className={`day-${day} ${ this.getColorValue(month, day) }`}> </div>\r\n                                                        </td>\r\n                                                )\r\n                                            }\r\n                                        </tr>     \r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>   \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n }\r\n\r\nexport default DataCardHistory;","/*\r\n    File: DataCardDetail.js\r\n    Author: Chris Mowry\r\n    Date: 05/16/2020\r\n    Email: cmowry84@gmail.com\r\n    Description:\r\n\r\n        This component displayes the detailed description and history. \r\n        This component is hidden and expands when the user clicks on the display.\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport DataCardDesc from './DataCardDesc';\r\nimport DataCardHistory from './DataCardHistory';\r\nimport { formatNumber } from '../../resource/Util';\r\nimport '../../style/datacard-detail.scss'\r\n\r\n class DataCardDetail extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            activeTab:'describe'\r\n        }\r\n        this.handleHeaderButtonClick = this.handleHeaderButtonClick.bind(this);\r\n    }\r\n\r\n    handleHeaderButtonClick(button){\r\n        this.setState({ activeTab : button });\r\n    }\r\n\r\n    render() {\r\n        const { optimumFlowLow_i:optLow = 0, optimumFlowHigh_i:optHigh = 0 } = this.props.spotDetail;\r\n        const { unit:optUnit = 'unk' } = this.props.spot;\r\n        return (\r\n            <div className='data-card-detail'>\r\n                <div className='detail-header'>\r\n                    <h4>{`optimum range: ${ formatNumber(optLow) } - ${ formatNumber(optHigh) } ${optUnit}`}</h4>\r\n                    <div className='tab-bar'>\r\n                        <button \r\n                            className={this.state.activeTab === 'describe' ? 'tab-button active': 'tab-button'}\r\n                            onClick={()=>this.handleHeaderButtonClick('describe')} >\r\n                            Description\r\n                        </button>\r\n                        <button \r\n                            className={this.state.activeTab === 'history' ? 'tab-button active': 'tab-button'}\r\n                            onClick={()=>this.handleHeaderButtonClick('history')} >\r\n                            History\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className='detail-content'>\r\n                    {\r\n                        this.state.activeTab === 'describe' \r\n                        ? <DataCardDesc spotDetail={ this.props.spotDetail } spot={ this.props.spot } />\r\n                        : <DataCardHistory spotDetail={ this.props.spotDetail }/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n }\r\n\r\nexport default DataCardDetail;","export const properties = {\r\n    overview_url: process.env.PUBLIC_URL + '/test-data/overview_spot_data.json',\r\n    detail_url: process.env.PUBLIC_URL + '/test-data/detail_spot_data.json'\r\n};\r\n\r\n","/*\r\n    File: DataCard.js\r\n    Author: Chris Mowry\r\n    Date: 05/16/2020\r\n    Email: cmowry84@gmail.com\r\n    Description:\r\n\r\n        This component serves as the high level wrapper for the suf spot \r\n        data display. It assembles all of the various components used \r\n        to present information on each surf spot.\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport DataCardDisplay from './DataCardDisplay';\r\nimport DataCardDetail from './DataCardDetail';\r\nimport {properties} from '../../resource/Config';\r\nimport '../../style/datacard.scss'\r\n\r\n class DataCard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            details : {}\r\n        }\r\n\r\n        this.onChangeExpand = this.onChangeExpand.bind(this);\r\n    }\r\n\r\n    fetchData(){\r\n        fetch(properties.detail_url, {\r\n            headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n             }})\r\n        .then((response) => response.json())\r\n        .then((spots) => {\r\n            this.setState({\r\n                details : spots.find(spot => spot.spot_id === this.props.spot.spot_id)\r\n            })\r\n        })\r\n    }\r\n\r\n    async onChangeExpand(event){\r\n        if(event.target.checked){\r\n            this.fetchData();\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchData();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className='data-card'>\r\n                <input id={'detail-button-' + this.props.spot.spot_id}\r\n                 className='detail-button'\r\n                 type=\"checkbox\"\r\n                 onChange={this.onChangeExpand}\r\n                 defaultChecked={ this.props.expanded } />\r\n                    <label htmlFor={'detail-button-' + this.props.spot.spot_id} className='detail-button-view'>\r\n                        <DataCardDisplay spot={this.props.spot} />\r\n                        <DataCardDetail spotDetail={this.state.details} spot={this.props.spot}/>\r\n                    </label>\r\n            </li>\r\n        );\r\n    }\r\n }\r\n\r\n DataCard.defaultProps = {\r\n    spot:{ spot_id : 0 }\r\n }\r\n\r\nexport default DataCard;","/*\r\n    File: DataCardDeck.js\r\n    Author: Chris Mowry\r\n    Date: 05/16/2020\r\n    Email: cmowry84@gmail.com\r\n    Description:\r\n\r\n        This component holds the collection of data cards.\r\n*/\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport DataCard from './DataCard';\r\nimport '../../style/datacard.scss'\r\n\r\n class DataCardDeck extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='data-card-deck'>\r\n                <ul>\r\n                    {\r\n                        this.props.spots.map(\r\n                            (spot) => <DataCard key={spot.spot_id} \r\n                                                spot={spot} \r\n                                                expanded={this.props.expanded}/>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n }\r\n\r\nexport default DataCardDeck;","/*\n    File: App.js\n    Author: Chris Mowry\n    Date: 05/16/2020\n    Email: cmowry84@gmail.com\n    Description:\n\n        This component utilizes all of the high level components to allow the user\n        to interact with the web application. It also makes the inital data request \n        from the server-side data source.\n*/\n\nimport React, { Component } from 'react';\nimport Header from './components/header/Header';\nimport Footer from './components/footer/Footer';\nimport MapContainer from './components/map/MapContainer';\nimport DataCardDeck from './components/data_cards/DataCardDeck';\nimport {properties} from './resource/Config';\nimport {compareSpots} from './resource/Util';\nimport './style/app.scss';\n\n\nclass App extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            surfSpots: [],\n            filteredSpots: [],\n            mapVisible: false,\n            mapButtomVisible: true,\n            expandedCards: false,\n            filtered: false,\n            isLoaded: false,\n        }\n\n        this.toggleMapVisibility = this.toggleMapVisibility.bind(this);\n        this.toggleCardExpand = this.toggleCardExpand.bind(this);\n        this.filterSpots = this.filterSpots.bind(this);\n        this.unfilterSpots = this.unfilterSpots.bind(this);\n    }\n\n    toggleMapVisibility(){\n        this.setState({mapVisible: !this.state.mapVisible})\n    }\n\n    toggleCardExpand(){\n        this.setState({expandedCards: !this.state.expandedCards})\n    }\n\n    filterSpots(spot_id){\n        this.setState({ \n            filtered : true, // sets the filtered spots true\n            filteredSpots : this.state.surfSpots.filter((spot) => spot.spot_id === spot_id).sort(compareSpots)\n        }); \n    }\n\n    unfilterSpots(){\n        this.setState({ \n            filtered : false // sets the filtered spots false\n        }); \n\n        this.getSurfSpots(); // gets all of the spots\n    }\n\n    getSurfSpots(){\n\n       // fetches surf spots from url\n       fetch( properties.overview_url, {\n        headers : { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n         }})\n        .then((response) => response.json())\n        .then((spots) => {\n\n            let spotName = this.props.match.params.spot;\n            let gageNumber = parseInt(this.props.match.params.gage);\n\n            // filters for url paramater for spot\n            if (spotName){\n                spots = spots.filter((spot) => spot.name.toLowerCase() === spotName.toLowerCase());\n                this.setState({ mapVisible : true, expandedCards : true });\n            }\n\n            // filters for path parameter for gage number\n            if (gageNumber){\n                spots = spots.filter((spot) => spot.site === gageNumber );\n\n                // if there is only 1 record, expand the map and the card\n                if (spots.length === 1){\n                    this.setState({ mapVisible: true, expandedCards : true  })\n                }\n            }\n\n            this.setState({ \n                surfSpots : spots,\n                filteredSpots : spots.sort(compareSpots)\n            })\n        })\n    }\n\n    componentDidMount(){\n        // refreshes the data every 10 minutes while the app is running\n        if(!this.state.isLoaded){\n            this.getSurfSpots();\n            this.setState({ isLoaded: true });\n        }\n        this.interval = setInterval(() => this.getSurfSpots(), 600000);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.interval);\n    }\n\n    render() {\n        return (\n            <div className='container'>\n                <Header mapVisible={ this.state.mapVisible } \n                    toggleMapVisibility={ this.toggleMapVisibility }\n                    mapButtomVisible={ this.state.mapButtomVisible }/>\n                <div className='content'>\n                    <MapContainer spots={ this.state.surfSpots } \n                            mapVisible={ this.state.mapVisible }\n                            filterSpots={this.filterSpots} \n                            unfilterSpots={this.unfilterSpots} />\n                    <DataCardDeck spots={ this.state.filteredSpots }\n                             expanded={this.state.expandedCards}/>\n                    <Footer />\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nexport default App;\n","/*\r\n    File: Contact.js\r\n    Author: Chris Mowry\r\n    Date: 05/16/2020\r\n    Email: cmowry84@gmail.com\r\n    Description:\r\n\r\n        This component is intended to be the contact form for the web application.\r\n        This component requires a EmailJS account found at https://www.emailjs.com/\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport emailjs from 'emailjs-com';\r\nimport Header from '../header/Header';\r\nimport Footer from '../footer/Footer';\r\n\r\n\r\nimport '../../style/contact.scss'\r\n\r\n class Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sent: false,\r\n            sentError: false,\r\n            validEmail: true,\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n\r\n        if ( this.validate(event.target) ){\r\n\r\n            // sends email \r\n            emailjs.sendForm(process.env.REACT_APP_EMAILJS_SERVICEID,\r\n                             process.env.REACT_APP_EMAILJS_TEMPLATEID,\r\n                             event.target,\r\n                             process.env.REACT_APP_EMAILJS_USERID)\r\n                    .then((result) => {\r\n                        this.setState({ sent: true });\r\n                    }, (error) => {\r\n                        this.setState({ sentError: true });\r\n                    });\r\n            }\r\n    }\r\n\r\n    handleReset(event){\r\n        this.setState({ \r\n            sent: false,\r\n            sentError: false\r\n         });\r\n    }\r\n\r\n    validate(form){\r\n        let validEmail = this.validateEmail(form.senderEmail.value);\r\n        return validEmail;\r\n    }\r\n\r\n    validateEmail(email){\r\n        const emailExpression = /\\S+@\\S+/;\r\n        let emailCheck = emailExpression.test(String(email).toLowerCase());\r\n        this.setState({ validEmail: emailCheck });\r\n        return emailCheck;\r\n    }\r\n\r\n    render() {\r\n\r\n        const visible = this.state.sentError || this.state.sent\r\n                        ? 'hidden'\r\n                        : '';\r\n\r\n        const emailError = this.state.validEmail ? 'floating-label' : 'floating-label-error';\r\n\r\n        return (\r\n            <div className='container'>\r\n                <Header mapVisible={ false} mapButtomVisible={ false }/>\r\n                <div className='content'>\r\n                    <div className='contact-content'>\r\n                        <div className=\"contact-container\">\r\n                            {\r\n                                this.state.sentError \r\n                                ? <div className='contact-form-sent-error'>\r\n                                    <h3>Error: Your message was not sent.</h3>\r\n                                    <div className='button-box'>\r\n                                        <Link to='/'>Cancel</Link>\r\n                                        <button onClick={ this.handleReset }>Try Again</button>\r\n                                    </div>\r\n                                </div>\r\n                                : this.state.sent\r\n                                    ? <div className='contact-form-sent'>\r\n                                        <h3>Thank you for reaching out!</h3>\r\n                                        <h3>We will get back to you as soon as possible.</h3>\r\n                                        <div className='button-box'>\r\n                                            <Link to='/'>Close</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    :''\r\n                            }\r\n                            <form className={ `contact-form ${visible}` } onSubmit={ this.handleSubmit }>\r\n                                <h2>Contact Us:</h2>\r\n                                <div className=\"floating-label\">\r\n                                    <input type=\"text\" id=\"senderName\" name=\"senderName\" placeholder=\"Name\" required />\r\n                                    <label htmlFor=\"senderName\">Name</label>\r\n                                </div>\r\n                                <div className={ emailError } >\r\n                                    <input type=\"text\" id=\"senderEmail\" name=\"senderEmail\" placeholder=\"Email\" required />\r\n                                    <label htmlFor=\"senderEmail\">\r\n                                        {\r\n                                            this.state.validEmail ? \"Email\" : \"Email - Enter valid email!\"\r\n                                        }\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"message-box\">\r\n                                    <label htmlFor=\"feedback\">Message:</label>\r\n                                    <textarea id=\"feedback\" name=\"feedback\" rows=\"10\" required/>       \r\n                                </div>\r\n                                <div className=\"button-box\">\r\n                                    <Link to='/'>Cancel</Link>\r\n                                    <input type=\"submit\" value=\"Submit\"/>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact","/*\r\n    File: Help.js\r\n    Author: Chris Mowry\r\n    Date: 05/16/2020\r\n    Email: cmowry84@gmail.com\r\n    Description:\r\n\r\n        This component is intended to explain the various attributes of the web application.\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Header from '../header/Header';\r\nimport Footer from '../footer/Footer';\r\nimport '../../style/help.scss'\r\n\r\n class Help extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n\r\n    handleClose(event){\r\n        this.props.close();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <Header mapVisible={ false} mapButtomVisible={ false }/>\r\n                <div className='content'>\r\n                    <div className=\"help-container\">\r\n                        <div className=\"symbol-def-container\">\r\n                            <h3>Symbols</h3>\r\n                            <ul>\r\n                                <li>\r\n                                <img src={require(\"../../imgs/icon-ok-hand.svg\")} alt=\"Optimum Icon\" />\r\n                                <p>Surf spot is best at this level.</p>\r\n                                </li>\r\n                                <li>\r\n                                    <img src={require(\"../../imgs/icon-thumbs-up.svg\")} alt=\"Surfable Icon\" />\r\n                                    <p>Surf spot is surfable at this level.</p>\r\n                                </li>\r\n                                <li>\r\n                                    <img src={require(\"../../imgs/icon-thumbs-down.svg\")} alt=\"Not Surfable Icon\" />\r\n                                    <p>Surf spot is not surfable at this level.</p>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"display-def-container\">\r\n                            <h3>Surf Spot Display</h3>\r\n                            <img src={require(\"../../imgs/surf_app_snippet.jpg\")} alt=\"Display Definition\" />\r\n                        </div>\r\n                        <div className=\"display-def-container\">\r\n                            <h3>Directions</h3>\r\n                            <img src={require(\"../../imgs/map_snippet.jpg\")} alt=\"Display Definition\" />\r\n                        </div>\r\n                        <div className=\"button-box\">\r\n                            <Link to='/'>Close</Link>\r\n                        </div>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Help;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Route, HashRouter} from 'react-router-dom'\nimport App from './App';\nimport Contact from './components/contact/Contact';\nimport Help from './components/help/Help';\nimport './style/default.scss'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n// Change to BrowserRouter for deployment\n<HashRouter basename={process.env.PUBLIC_URL+'/'}>\n    <Route exact path = \"/\" component = {App}/>\n    <Route exact path = \"/spots\" component = {App}/>\n    <Route exact path = \"/spots/:spot\" component = {App}/>\n    <Route exact path = \"/gages/\" component = {App}/>\n    <Route exact path = \"/gages/:gage\" component = {App}/>\n    <Route exact path = \"/help\" component = {Help} />\n    <Route exact path = \"/contact\" component = {Contact} />\n</HashRouter>\n,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}